<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: gem | Brandon Hilkert]]></title>
  <link href="http://brandonhilkert.com/blog/categories/gem/atom.xml" rel="self"/>
  <link href="http://brandonhilkert.com/"/>
  <updated>2014-03-17T20:25:32-04:00</updated>
  <id>http://brandonhilkert.com/</id>
  <author>
    <name><![CDATA[Brandon Hilkert]]></name>
    <email><![CDATA[brandonhilkert@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Why I Wrote the Sucker Punch Gem]]></title>
    <link href="http://brandonhilkert.com/blog/why-i-wrote-the-sucker-punch-gem/"/>
    <updated>2014-03-13T13:56:00-04:00</updated>
    <id>http://brandonhilkert.com/blog/why-i-wrote-the-sucker-punch-gem</id>
    <content type="html"><![CDATA[<p>_This is one of 3 posts leading up the the launch of my
[__Build a Ruby Gem book__](/books/build-a-ruby-gem/?utm_source=bh-com&utm_medium=web&utm_campaign=sucker-punch)
on __Thursday, March 27__! Sign up below to receive a **20% discount coupon** when the book launches._

<div class="inline-newsletter-form">
  <form action="http://brandonhilkert.us7.list-manage2.com/subscribe/post?u=34ccc3aa2135746d0231c9420&id=3c07d60ff7" method="post" target="_blank" novalidate>
    <input type="email" value="" name="EMAIL" class="email" id="mce-EMAIL" placeholder="email" required>
    <input type="hidden" name="LOCATION" id="LOCATION" value="Category: gem" />
    <input type="hidden" name="PRODUCT" id="PRODUCT" value="book-gem" />
    <input type="submit" value="Send Me a Discount Code" name="subscribe" id="mc-embedded-subscribe" class="button">
  </form>
</div>




</p>

<p>One of the simplest and most common application of background processing is sending emails outside of a web
request. And while background processing is pretty common, most existing Ruby background processing libraries require an additional process to execute these jobs, resulting in increased infrastructure costs.</p>

<p>At the time, I was working on an application hosted on Heroku, and the cost of an additional dyno ($35/month) wasn’t justified. The background jobs did very little more than send emails out of band. To me, the traditional solutions seemed like overkill. And with this, the idea of <a href="https://github.com/brandonhilkert/sucker_punch">sucker_punch</a> was born&hellip;</p>

<!--more-->


<h2>Ruby Background Processing Libraries</h2>

<p>Until I had heard of <a href="http://sidekiq.org/">Sidekiq</a>, <a href="https://github.com/collectiveidea/delayed_job/tree/master">delayed_job</a> and <a href="https://github.com/resque/resque">Resque</a> were the standard options for processing background jobs in Ruby. I&rsquo;ve used both and believe each has a great use case.</p>

<p>In my experience, it&rsquo;s easiest to start with delayed_job if you need background processing in your application. If and when the DB becomes your bottleneck, it&rsquo;s time to move on. Redis is a dependency of both Resque and Sidekiq, which increases the complexity and infrastructure maintenance, however, with <a href="https://addons.heroku.com/?q=redis">Heroku&rsquo;s hosted Redis
Add-ons</a>, this dependency is much less of a pain.</p>

<h2>My work on Sidekiq</h2>

<p>I previously wrote about my my <a href="http://brandonhilkert.com/blog/3-ways-to-get-started-contributing-to-open-source/">open source contributions</a> and how I got started. I had spent the previous several
months contributing to Sidekiq and learning more about concurrency patterns in Ruby.</p>

<p>Sidekiq is multi-threaded, which is the reason a single Sidekiq process is <a href="https://github.com/mperham/sidekiq/wiki/Testimonials">more
efficient</a> than a library like Resque. Although, nothing in life is free &ndash; care must be taken to ensure your jobs are thread-safe. A helpful <a href="https://github.com/mperham/sidekiq/wiki/Best-Practices">guide to writing thread-safe code</a> can be found on the Sidekiq wiki.</p>

<h2>Use Case</h2>

<p>I was working on <a href="http://defriendnotifierapp.com/">Defriend Notifier</a> and needed to notify users via email when their Facebook friend list changed. Using Sidekiq or any of the alternatives mentioned above certainly would’ve worked. In fact, the application originally used Sidekiq and functioned perfectly. However, as time went on, I decided the extra cost of the worker wasn’t justified, especially given that the application didn’t produce any revenue outside of advertising (very little…).</p>

<p>At the time, the only background processing library that didn’t require an additional background process was
<a href="https://github.com/mperham/girl_friday">girl_friday</a>, also written by <a href="https://twitter.com/mperham">Mike
Perham</a>, author of Sidekiq. While this solution worked for awhile, I found the syntax to be slightly non-intuitive and it felt a little dirty to pass around a global variable within the application
to manage a single job queue. I also experienced some memory leaks on Heroku as a result of switching to
girl_friday, but to be fair, I didn&rsquo;t spend much time determining the root cause. <em>Disclaimer: It very likely could’ve been due to code that I wrote</em>.</p>

<h2>Enter Celluloid</h2>

<p><a href="https://github.com/celluloid/celluloid">Celluloid</a> describes itself as an actor-based concurrent object
framework for Ruby. Celluloid is the guts behind Sidekiq and the reason why the multi-threaded Sidekiq code is so readable. Celluloid abstracts away the details of concurrency so your code doesn&rsquo;t have to worry about manually managing thread synchronization and object message queuing.</p>

<h2>Sucker Punch is born</h2>

<p>girl_friday was written several years ago — before Celluloid was created. Realizing the power of Celluloid,
I figured there was an opportunity for a new library that behaved like girl_friday, but utilized
Celluloid&rsquo;s more reliable multi-threading capabilities. And because Celluloid handles so much of the complexity, the gem itself would be relatively simple — really a DSL around enqueuing jobs to a <a href="https://github.com/celluloid/celluloid/wiki/Pools">Celluloid Pool</a>.</p>

<p>I <a href="https://twitter.com/brandonhilkert/status/292630123981729793">posed the question to Mike Perham</a> and he confirmed my suspicions.</p>

<p><img class="center" src="/images/sucker-punch-tweet.png" title="&ldquo;Sucker Punch Tweet&rdquo;" ></p>

<p>Fortunately, Celluloid had all of the functionality needed for background queues already built-in. While the
functionality was there, the usage syntax was awkward.</p>

<p>I spent the next few days creating a DSL around the Celluloid internals, thus making it feel more specific to
background queues.</p>

<p>Here’s the result of a typical job class:</p>

<pre><code>class LogJob
  include SuckerPunch::Job

  def perform(event)
    # do some other stuff to
    # record the event in the background
    puts "#{event} just happened"
  end
end
</code></pre>

<p>I deployed my sucker_punch-converted application code to production and gave it a week or so before I declared it a success. Once I realized sucker_punch was going to be a maintainable method for processing background jobs in a single web process, I added additional niceties like logging and queue configuration details that may be valuable for other use cases.</p>

<p>Have you tried <a href="https://github.com/brandonhilkert/sucker_punch">sucker_punch</a> yet? If so, I&rsquo;d love to know how it went and what you used it for&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How I Launched an Email Course to 500+ People]]></title>
    <link href="http://brandonhilkert.com/blog/how-i-launched-an-email-course/"/>
    <updated>2014-01-06T06:15:00-05:00</updated>
    <id>http://brandonhilkert.com/blog/how-i-launched-an-email-course</id>
    <content type="html"><![CDATA[<p>About a month ago, I joined <a href="http://jfdi.bz/">JFDI.bz</a> &ndash; a community for
solo-founders launching their own thing. Once a month, the group engages in a
<em>Week of Hustle</em> &ndash; a week long sprint to launch something.
I chose to launch an email course on the topic of <a href="http://brandonhilkert.com/courses/build-a-ruby-gem/?utm_source=bh-newsletter&amp;utm_medium=email&amp;utm_campaign=woh-summary">building a Ruby
gem</a>.</p>

<!--more-->


<h2>Why <em>Build a Ruby Gem</em>?</h2>

<p>A few years ago, I was building my first Ruby gem and I was left pretty
confused with the process and conventions. After working through my
frustrations, I thought the information I learned could be useful to others.</p>

<p>Honestly, I thought to write an eBook at first, however, the last thing I
wanted was to invest a month or two of my time only to find out people
weren&rsquo;t interested.</p>

<p>An email course was a good medium &ndash; I could cover the basics well enough to get
people through their hangups, while also validating the need for an eBook. I
figured if I got <strong>100-200</strong> people to sign up for the course, I would move
forward with the book.</p>

<h2>Results</h2>

<p>It turns out my marketing efforts were more successful than I anticipated.</p>

<h3>Today, almost 600 people have taken the Build a Ruby Gem email course!</h3>

<h2>Email is King&hellip;still</h2>

<p>Prior to launching this email course, I&rsquo;d read about the value of building an
email list from people like <a href="http://nathanbarry.com/">Nathan Barry</a>, <a href="http://unicornfree.com/">Amy
Hoy</a> and <a href="http://justinjackson.ca/">Justin Jackson</a>.</p>

<p>I&rsquo;d also read countless other posts describing the most common regrets when
launching a new product. Almost all of them included not building an email
list. With that said, it was one of the first things I setup.</p>

<p>I blogged each day about my progress. Each post had a
mailing list subscription form that sent them subsequent daily updates.  Subscriptions
were slow at first, but interest built.  By then end of the week <strong>232</strong> people had
subscribed. And the day the course went live, I was able to to convert <strong>115</strong>
(~50%) of them.</p>

<p>The people subscribed were <strong>EXACTLY</strong> my target audience so it&rsquo;s no surprise
conversion was high.</p>

<h2>Finding Your Target Audience</h2>

<p>Fortunately for me, my target audience was Ruby developers and they hang out
online (surprise, surprise). But where online&hellip;</p>

<p>Let me hit you with something that seems obvious in hindsight:</p>

<h3>Marketing is easy when you build a product for an audience you&rsquo;re already part of.</h3>

<p>This was something I&rsquo;d <a href="http://unicornfree.com/2013/how-do-you-create-a-product-people-want-to-buy">read over the past few
months</a>,
but not seen its value until now.</p>

<p>The email course is for <strong>Ruby developers</strong>, I&rsquo;m a <strong>Ruby Developer</strong>, so the
question becomes&hellip;.<em>where do I hang out online?</em></p>

<p>That question is <strong>easy</strong> to answer &ndash; <a href="http://rubyweekly.com/">Ruby weekly</a>,
<a href="http://www.reddit.com/r/ruby">Reddit</a> and
<a href="http://www.rubyflow.com/">RubyFlow</a>.</p>

<p>And don&rsquo;t you know&hellip;it turns out those 3 sources have been the highest
converting sources since the course launched:</p>

<ol>
<li>Ruby weekly &ndash; 131</li>
<li>RubyFlow &ndash; 65</li>
<li>Reddit &ndash; 62</li>
</ol>


<p>The remaining sources were a combination of direct links, social media and
other technology news aggregation sites (probably mostly stemming from the top
sources above).</p>

<p><em>Note: I&rsquo;ve been reading <a href="http://www.amazon.com/80-20-Sales-Marketing-Definitive/dp/1599185059">80/20 Sales and
Marketing</a>
and the numbers above coincide, almost exactly, to the 80/20 curve. That is,
80% of the conversion came from 20% of the sources.</em></p>

<h2>Twitter Tip</h2>

<p>The last day of the email course has a <em>Summary</em> section thanking people for
taking the course and attempting to get feedback. While I haven&rsquo;t received much
constructive criticism, I dropped this little doozie at the bottom:</p>

<p><img class="center" src="/images/email-course/click-to-tweet.png" title="&ldquo;Build a Ruby Gem Email Course Click To Tweet&rdquo;" ></p>

<p>I&rsquo;d read a post about <a href="http://grinnick.com/posts/how-groove-s-email-copy-makes-their-posts-go-viral?ref=hn">GroveHQ&rsquo;s emails going
viral</a>
and this was something they did in their campaigns.</p>

<p>The link allows people to click and immediately be setup to Tweet the
following:</p>

<p><img class="center" src="/images/email-course/course-tweet.png" title="&ldquo;Build a Ruby Gem Email Course Tweet&rdquo;" ></p>

<p>It&rsquo;s difficult to determine the value of those tweets, but over 10 people have
clicked and tweeted. To me, this was surprising, but valuable.</p>

<p>I&rsquo;ll probably look to make it stand out a bit more to hopefully improve the
click-through.</p>

<h2>In Summary</h2>

<p>I spent a total of <strong>16 hours</strong> creating the <em>Build a Ruby Gem</em> email
course, which has since <strong>validated the need for a book</strong>. While interest
in a free email course doesn&rsquo;t guarantee a book on the same subject will sell, it was
the closet thing I could think to do outside of taking pre-orders.</p>

<p>I&rsquo;ve started writing the <a href="http://brandonhilkert.com/books/build-a-ruby-gem/?utm_source=bh-newsletter&amp;utm_medium=email&amp;utm_campaign=woh-summary"><em>Build a Ruby Gem</em>
book</a>.
If you&rsquo;re interested in receiving updates on my progress, enter your email
below:</p>

<p><div class="inline-newsletter-form">
  <form action="http://brandonhilkert.us7.list-manage2.com/subscribe/post?u=34ccc3aa2135746d0231c9420&id=3c07d60ff7" method="post" target="_blank" novalidate>
    <input type="email" value="" name="EMAIL" class="email" id="mce-EMAIL" placeholder="email" required>
    <input type="hidden" name="LOCATION" id="LOCATION" value="Category: gem" />
    <input type="hidden" name="PRODUCT" id="PRODUCT" value="book-gem" />
    <input type="submit" value="Send Me a Discount Code" name="subscribe" id="mc-embedded-subscribe" class="button">
  </form>
</div>

</p>

<p>Members of this list will also receive a <strong>20% discount coupon</strong> when the book
launches!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build a Ruby Gem Email Course - Weekend Update]]></title>
    <link href="http://brandonhilkert.com/blog/build-a-ruby-gem-email-course-week-of-hustle-weekend-update/"/>
    <updated>2013-12-09T06:15:00-05:00</updated>
    <id>http://brandonhilkert.com/blog/build-a-ruby-gem-email-course-week-of-hustle-weekend-update</id>
    <content type="html"><![CDATA[<p><p>
  <em>I did an <strong>8-day sprint</strong> to launch my <a
  href="/courses/build-a-ruby-gem/" target="_blank"><strong>Build a Ruby Gem</strong> email course</a>
  and documented my progress through this series of blog posts.</em>
</p>

<p><a href="/blog/build-a-ruby-gem-woh-day-1/">Day 1</a> |
<a href="/blog/build-a-ruby-gem-email-course-week-of-hustle-day-2/">Day 2</a> |
<a href="/blog/build-a-ruby-gem-email-course-week-of-hustle-day-3/">Day 3</a> |
<a href="/blog/build-a-ruby-gem-email-course-week-of-hustle-day-4/">Day 4</a> |
<a href="/blog/build-a-ruby-gem-email-course-week-of-hustle-day-5/">Day 5</a> |
<a href="/blog/build-a-ruby-gem-email-course-week-of-hustle-day-6/">Day 6</a> |
<a href="/blog/build-a-ruby-gem-email-course-week-of-hustle-weekend-update/">Weekend Update</a>
<a href="/blog/how-i-launched-an-email-course/">Summary</a>
</p>

<p>Hope you had a great weekend!</p>

<p>Aside from hibernating inside due to the 6 extra inches of snow that wasn&rsquo;t
predicted, I spent some time with the course content this weekend. In efforts
to do a final proofread, I noticed something wasn&rsquo;t quite right. My goal for
this course was to smooth over the conventions of a Ruby gem that go much less
talked about. However, because I naively chose a gem that included Rails
integration as the example, the content ended up being more about Rails than I
had planned.</p>

<!--more-->


<p>I thought about it for a bit on Saturday and decided it was best to
rewrite the content around a simpler gem example. So that my Sunday!</p>

<p>I thought about how I ended up down this path and realized it&rsquo;s because I
didn&rsquo;t put enough planning in to the actual content. Early on, I sketched our a
very rough outline of the lessons in the course, but never thought about the
examples or which gem to use. I originally picked on of my recent written gems
for Rails and assumed it was simple enough that I could quickly gloss over the
Rails details. But the last thing I wanted was for the Rails topics to cloud
the steps need to build a basic Ruby Gem.</p>

<p>Examples are really hard. I ended up choosing a topic that is probably not
supremely useful in an everyday Ruby application, however, the conventions and
theories apply to any gem.</p>

<p>I do plan to cover Rails integration in a future publication. There are so many
hooks in to the framework when using a Railtie, it almost deserves a separate
course. I did save the removed content, so I&rsquo;ll have to figure out where it&rsquo;s
best presented.</p>

<h2>What I Accomplished This Weekend</h2>

<p>As mentioned above, I rewrote the course content around a simpler gem example.
It did simplify the course, so I hope it&rsquo;ll be easier to navigate for those
that are less familiar with Ruby.</p>

<p>I also designed a landing page for the course that I&rsquo;m really excited about.
Web design has always been one of the skills that I&rsquo;ve struggled with. I can generally
get it 70-80% there, but never have it look really polished. I&rsquo;ve spent
more time doing that lately and finally feel like I&rsquo;m hitting the mark.</p>

<p>The only thing left to do is proofread the course content and setup the course
drip campaign in Mailchimp.</p>

<h2>Launch Date</h2>

<p>I&rsquo;m excited to announce the course will launch this <strong>Wednesday (12/11) at 7AM
EST</strong>. I&rsquo;ll send an announcement on Wednesday morning with the registration
URL.</p>

<h2>Marketing</h2>

<p>Signups continued to trickle in throughout the weekend and I added another 30
subscriptions to this update list:</p>

<p><img class="center" src="/images/woh/mailchimp-weekend.png" title="&ldquo;Mailchimp Weekend results&rdquo;" ></p>

<p>The link in Ruby Weekly amounted to 117 newsletter subscription
(<strong>almost 25% of the total visits</strong>). There&rsquo;s been no other channel even close to
that level of conversion.</p>

<p>During the process of posting course updates, I&rsquo;ve come across a few other
channels that I thought would be valuable sources of traffic after launch. I
plan to post to those sites sometime Wednesday and am interested to see how
they do relative to the sources I&rsquo;ve been using.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build a Ruby Gem Email Course - Week of Hustle - Day 6]]></title>
    <link href="http://brandonhilkert.com/blog/build-a-ruby-gem-email-course-week-of-hustle-day-6/"/>
    <updated>2013-12-06T06:15:00-05:00</updated>
    <id>http://brandonhilkert.com/blog/build-a-ruby-gem-email-course-week-of-hustle-day-6</id>
    <content type="html"><![CDATA[<p><p>
  <em>I did an <strong>8-day sprint</strong> to launch my <a
  href="/courses/build-a-ruby-gem/" target="_blank"><strong>Build a Ruby Gem</strong> email course</a>
  and documented my progress through this series of blog posts.</em>
</p>

<p><a href="/blog/build-a-ruby-gem-woh-day-1/">Day 1</a> |
<a href="/blog/build-a-ruby-gem-email-course-week-of-hustle-day-2/">Day 2</a> |
<a href="/blog/build-a-ruby-gem-email-course-week-of-hustle-day-3/">Day 3</a> |
<a href="/blog/build-a-ruby-gem-email-course-week-of-hustle-day-4/">Day 4</a> |
<a href="/blog/build-a-ruby-gem-email-course-week-of-hustle-day-5/">Day 5</a> |
<a href="/blog/build-a-ruby-gem-email-course-week-of-hustle-day-6/">Day 6</a> |
<a href="/blog/build-a-ruby-gem-email-course-week-of-hustle-weekend-update/">Weekend Update</a>
<a href="/blog/how-i-launched-an-email-course/">Summary</a>
</p>

<p>Happy Friday!</p>

<p>This morning I&rsquo;m feeling well rested and finally on the home stretch. In the
middle of the week, the remaining work felt overwhelming at times and I have a
feeling that played in to me feeling exhausted.</p>

<p>Part of it was that each lesson has gotten substantially longer than I planned
for. I think once I get in to the flow of writing, I tend to document
everything for everyone. I don&rsquo;t think everyone will need this level of detail,
but I&rsquo;d hate to leave it out, only to find that some users were left confused
because of the lack thereof.</p>

<p>Here&rsquo;s how the word count of each lesson shakes out so far:</p>

<!--more-->


<ul>
<li>Day 1 &ndash; 941</li>
<li>Day 2 &ndash; 1067</li>
<li>Day 3 &ndash; 1738</li>
<li>Day 4 &ndash; 868</li>
<li>Day 5 &ndash; 1118</li>
</ul>


<p>Looking at this now, I&rsquo;ll probably go back and rework Day 3 to either split out
some of the content, or remove it during editing depending on its value.</p>

<h2>What I Accomplished Today</h2>

<p>This morning I finished Day 5 of the Build a Ruby Gem Email Course. I&rsquo;m happy
with where it left off and can now say there&rsquo;s only 1 (2 at most) more to
write. And even those will be more wrap-up. All the code is finished.</p>

<p>I got in to the flow of writing pretty quickly this morning. I naturally woke
up around 6am, so I was probably less in a daze when I started.</p>

<h2>Marketing</h2>

<p>I was looking forward to writing this section&hellip;Yesterday, I opened my inbox and saw this:</p>

<p><img class="center" src="/images/woh/ruby-weekly-link.png" title="&ldquo;A link to my Build a Ruby Gem email course in Ruby Weekly.&rdquo;" ></p>

<p>That&rsquo;s my course link in the <a href="http://rubyweekly.com/">Ruby Weekly</a> newsletter.
This newsletter is a great weekly summary of the Ruby community and has several
thousand subscribers. I had a feeling this would yield a significant bump in
subscriptions and page views and boy was that true.</p>

<p>Page views were up <strong>153%</strong> from the previous day:</p>

<p><img class="center" src="/images/woh/ga-day5.png" title="&ldquo;Google Analytics day 5 results&rdquo;" ></p>

<p>And subscriptions for course updates were up <strong>130%</strong>:</p>

<p><img class="center" src="/images/woh/mailchimp-day5.png" title="&ldquo;Mailchimp day 5 results&rdquo;" ></p>

<p>Herein lies the power of reaching your target audience&hellip;</p>

<p>I track conversions to the newsletter in Google Analytics and Ruby Weekly is
kind enough to send a lot a campaign identifier with the link. Here are the
channels that have converted the best:</p>

<p><img class="center" src="/images/woh/ga-conversions-day5.png" title="&ldquo;Google Analytics traffic conversions from day 5&rdquo;" ></p>

<p>30% of all newsletter clicks resulted in newsletter subscriptions&hellip;I&rsquo;ll take
it! Not far behind is the campaign I sent to my personal list announcing the
email course, and next is links from Twitter. However, what this doesn&rsquo;t show
is that only 7 visitors arrived from Twitter referral links, so while 14% is
pretty good, it&rsquo;s a sample size that&rsquo;s probably not worth trusting.</p>

<p>While I&rsquo;ve read plenty about the power of email, I&rsquo;ve not seen this effect in
person until now. With these quick marketing recaps, I feel like I&rsquo;ve only
scratched the surface. After the course launches, I plan to spend more time
with the numbers to get a better feel for what went well, and more so, what I
should avoid in future launches.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build a Ruby Gem Email Course - Week of Hustle - Day 5]]></title>
    <link href="http://brandonhilkert.com/blog/build-a-ruby-gem-email-course-week-of-hustle-day-5/"/>
    <updated>2013-12-05T06:15:00-05:00</updated>
    <id>http://brandonhilkert.com/blog/build-a-ruby-gem-email-course-week-of-hustle-day-5</id>
    <content type="html"><![CDATA[<p><p>
  <em>I did an <strong>8-day sprint</strong> to launch my <a
  href="/courses/build-a-ruby-gem/" target="_blank"><strong>Build a Ruby Gem</strong> email course</a>
  and documented my progress through this series of blog posts.</em>
</p>

<p><a href="/blog/build-a-ruby-gem-woh-day-1/">Day 1</a> |
<a href="/blog/build-a-ruby-gem-email-course-week-of-hustle-day-2/">Day 2</a> |
<a href="/blog/build-a-ruby-gem-email-course-week-of-hustle-day-3/">Day 3</a> |
<a href="/blog/build-a-ruby-gem-email-course-week-of-hustle-day-4/">Day 4</a> |
<a href="/blog/build-a-ruby-gem-email-course-week-of-hustle-day-5/">Day 5</a> |
<a href="/blog/build-a-ruby-gem-email-course-week-of-hustle-day-6/">Day 6</a> |
<a href="/blog/build-a-ruby-gem-email-course-week-of-hustle-weekend-update/">Weekend Update</a>
<a href="/blog/how-i-launched-an-email-course/">Summary</a>
</p>

<p>I&rsquo;m tired. Getting up around 5am all week has worn on me. Yesterday I felt like
zombie&hellip;and it was mostly my own fault because I didn&rsquo;t make it a priority to
get bed a decent hour.</p>

<p>I&rsquo;m not sure about you, but I function best with 7-8 hours of sleep. I
generally can&rsquo;t sleep longer than 8, and anything less than 7 is OK for a
day or two, otherwise, it catches up with me. I think that&rsquo;s what&rsquo;s going
on here&hellip;</p>

<!--more-->


<p>Having realized this, I got to sleep last night around 9:30pm. I figured I&rsquo;d
sleep in until 6am or so, but naturally woke up around 5:15am. So while I&rsquo;m
feeling better this morning, I&rsquo;m still feeling the side effects of not getting
enough sleep from the first few days of the week.</p>

<p>I&rsquo;ll be more cautious of this for the rest of the week and see if I can get
back to a normal (whatever that means!).</p>

<h2>What I Accomplished Today</h2>

<p>Like the previous days, I was able to write Day 4 of the Build a Ruby Gem Email
Course. I had a bit of trouble getting in to the flow of writing this morning.
I&rsquo;m not sure if it&rsquo;s due to the lack of sleep mentioned above, or just a little
speed bump in the normal creative process. It took 15 min. or so until I felt
like words were coming out naturally.</p>

<h2>Changes to the Email Course</h2>

<p>On Day 3, I realized I hadn&rsquo;t gotten to the meat of the Ruby gem and was still
writing about important, but somewhat theoretical topics. It occurred to me that
it&rsquo;s probably best not to cut the content, but rather, extend the course. So
instead of a 5-day course, it might be 6 or 7. My goal is write the best content possible and if after 7 days, I
feel like I&rsquo;ve covered the topic thoroughly, I&rsquo;ll wrap it up.</p>

<p>One thought that has crossed my mind is removing some of the content for an
ebook. I could make the course somewhat abbreviated, while offering the book as
an up-sell to those interested in the details. I&rsquo;ll think about this some more
and once the course content shakes out.</p>

<p>Additionally , I thinking about spreading the course out. So rather than
send 1 email a day, shoot for every 2-3 days, so that I can market the course as
a 14 or 21-day email course. I also feel like the people that will get the most
value out of the content  would benefit from extra time in between each lesson.</p>

<h2>Marketing</h2>

<p>Visits were slightly down yesterday, and I suspect the allure of the announcement has worn off.</p>

<p><img class="center" src="/images/woh/ga-day4.png" title="&ldquo;Google Analytics day 4 results&rdquo;" ></p>

<p>Thinking more about it, I&rsquo;ve not been great at seeking out marketing channels
for people that might be a good fit for the course. I&rsquo;ve been posting to the
same channels, which has produced a decreasing level of interest over the past
4 days. Truthfully, I&rsquo;m pretty worn out by the time I finish the email course
lesson and this update post, so it&rsquo;s difficult to get worked up for that. But
I&rsquo;ll think more about it and report back.</p>

<p>The mailing list is up to 82 subscribers, so while the growth is slowing, it&rsquo;s
still a 10% lift over the previous day. This, too, probably reiterates my need
to find users elsewhere.</p>

<p><img class="center" src="/images/woh/mailchimp-day4.png" title="&ldquo;Mailchimp day 4 results&rdquo;" ></p>

<p>I setup the subscription form to track what page the user was on when they
subscribed. Subscriptions are coming from all over the place. It appears that even after 4 days, people are
still landing on the first post of the series and converting.</p>

<p><img class="center" src="/images/woh/mailchimp-conversion-sources-day4.png" title="&ldquo;Mailchimp conversion sources for day 4&rdquo;" ></p>

<p>Again, Reddit appears to be the best source for both traffic and conversions.</p>

<p><img class="center" src="/images/woh/sources-day4.png" title="&ldquo;Google Analytics day 4 traffic sources&rdquo;" ></p>

<p>Once the email course is live, I&rsquo;ll make a better effort to market the landing
page elsewhere. I think these updates may be better suited for a different
target audience anyway.</p>

<p>The end is near!</p>
]]></content>
  </entry>
  
</feed>
